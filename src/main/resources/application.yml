#服务端口配置
server:
  port: 8080
  
#数据库访问
master:
  spring:
    datasource:
      sqlserver:
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
        url: jdbc:sqlserver://%s:9999;Databasename=%s
        username: sa
        password: mh@803
        
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        min-idle: 5
        max-active: 30
        #获取连接等待超时时间
        max-wait: 60000
        #间隔多久进行一次检测，检测需要关闭的空闲连接
        time-between-eviction-runs-millis: 60000
        #一个连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 'x'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        spring.datasource.filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true 
slave:
  spring:
    datasource:
      orcl:
        driver-class-name: oracle.jdbc.driver.OracleDriver
        url: jdbc:oracle:thin:@192.168.1.222:1521:ORCL
        username: test
        password: test
    
    
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        min-idle: 5
        max-active: 30
        #获取连接等待超时时间
        max-wait: 60000
        #间隔多久进行一次检测，检测需要关闭的空闲连接
        time-between-eviction-runs-millis: 60000
        #一个连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 'x'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        spring.datasource.filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true

# mybatis配置
mybatis:
  configuration:
    #全局映射器启用缓存
    cache-enabled: true
    #查询时,关闭关联对象及时加载以提高性能
    lazy-loading-enabled: false
    #按需加载字段(加载字段由SQL指定),不会加载关联表的所有字段,以提高性能
    aggressive-lazy-loading: false
    #允许返回不同的结果集以达到通用的效果
    multiple-result-sets-enabled: true
    #对于批量更新操作缓存SQL以提高性能
    default-executor-type: REUSE
    default-statement-timeout: 25000
  type-aliases-package: com.mh.entity
 
 # 分页插件配置
pagehelper:
  helper-dialect: sqlserver
  reasonable: true
  support-methods-arguments: true
  page-size-zero: true
  params: count = countSql 
 # LOGGING
#logging:
#  config: classpath:log4j2.xml 